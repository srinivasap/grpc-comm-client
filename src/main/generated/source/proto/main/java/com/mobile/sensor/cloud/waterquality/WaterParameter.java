// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: waterqualitysensor.proto

package com.mobile.sensor.cloud.waterquality;

/**
 * <pre>
 * water quality attributes
 * </pre>
 *
 * Protobuf type {@code WaterParameter}
 */
public  final class WaterParameter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:WaterParameter)
    WaterParameterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WaterParameter.newBuilder() to construct.
  private WaterParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WaterParameter() {
    unit_ = 0;
    attribute_ = 0;
    state_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WaterParameter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            unit_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            attribute_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            state_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.mobile.sensor.cloud.waterquality.WaterQualitySensorProto.internal_static_WaterParameter_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.mobile.sensor.cloud.waterquality.WaterQualitySensorProto.internal_static_WaterParameter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.mobile.sensor.cloud.waterquality.WaterParameter.class, com.mobile.sensor.cloud.waterquality.WaterParameter.Builder.class);
  }

  /**
   * Protobuf enum {@code WaterParameter.Unit}
   */
  public enum Unit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PARTS_PER_MILLION = 0;</code>
     */
    PARTS_PER_MILLION(0),
    /**
     * <code>CUBIC_METER = 1;</code>
     */
    CUBIC_METER(1),
    /**
     * <code>MILLGRAM_PER_CUBIC_METER = 2;</code>
     */
    MILLGRAM_PER_CUBIC_METER(2),
    /**
     * <code>PERCENT = 3;</code>
     */
    PERCENT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PARTS_PER_MILLION = 0;</code>
     */
    public static final int PARTS_PER_MILLION_VALUE = 0;
    /**
     * <code>CUBIC_METER = 1;</code>
     */
    public static final int CUBIC_METER_VALUE = 1;
    /**
     * <code>MILLGRAM_PER_CUBIC_METER = 2;</code>
     */
    public static final int MILLGRAM_PER_CUBIC_METER_VALUE = 2;
    /**
     * <code>PERCENT = 3;</code>
     */
    public static final int PERCENT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Unit valueOf(int value) {
      return forNumber(value);
    }

    public static Unit forNumber(int value) {
      switch (value) {
        case 0: return PARTS_PER_MILLION;
        case 1: return CUBIC_METER;
        case 2: return MILLGRAM_PER_CUBIC_METER;
        case 3: return PERCENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Unit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Unit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Unit>() {
            public Unit findValueByNumber(int number) {
              return Unit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.waterquality.WaterParameter.getDescriptor().getEnumTypes().get(0);
    }

    private static final Unit[] VALUES = values();

    public static Unit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Unit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:WaterParameter.Unit)
  }

  /**
   * Protobuf enum {@code WaterParameter.Attribute}
   */
  public enum Attribute
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PH = 0;</code>
     */
    PH(0),
    /**
     * <code>DO = 1;</code>
     */
    DO(1),
    /**
     * <code>ORP = 2;</code>
     */
    ORP(2),
    /**
     * <code>CONDUCTIVITY = 3;</code>
     */
    CONDUCTIVITY(3),
    /**
     * <code>TURBIDITY = 4;</code>
     */
    TURBIDITY(4),
    /**
     * <code>TEMPERATURE = 5;</code>
     */
    TEMPERATURE(5),
    /**
     * <code>FLUROIDE = 6;</code>
     */
    FLUROIDE(6),
    /**
     * <code>CALCIUM = 7;</code>
     */
    CALCIUM(7),
    /**
     * <code>NITRATE = 8;</code>
     */
    NITRATE(8),
    /**
     * <code>CHLORINE = 9;</code>
     */
    CHLORINE(9),
    /**
     * <code>BROMIDE = 10;</code>
     */
    BROMIDE(10),
    /**
     * <code>SILVER = 11;</code>
     */
    SILVER(11),
    /**
     * <code>FLUOROBORATE = 12;</code>
     */
    FLUOROBORATE(12),
    /**
     * <code>AMMONIA = 13;</code>
     */
    AMMONIA(13),
    /**
     * <code>LITHIUM = 14;</code>
     */
    LITHIUM(14),
    /**
     * <code>MEGNESIUM = 15;</code>
     */
    MEGNESIUM(15),
    /**
     * <code>PERCHLORATE = 16;</code>
     */
    PERCHLORATE(16),
    /**
     * <code>POTASSIUM = 17;</code>
     */
    POTASSIUM(17),
    /**
     * <code>SODIUM = 18;</code>
     */
    SODIUM(18),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PH = 0;</code>
     */
    public static final int PH_VALUE = 0;
    /**
     * <code>DO = 1;</code>
     */
    public static final int DO_VALUE = 1;
    /**
     * <code>ORP = 2;</code>
     */
    public static final int ORP_VALUE = 2;
    /**
     * <code>CONDUCTIVITY = 3;</code>
     */
    public static final int CONDUCTIVITY_VALUE = 3;
    /**
     * <code>TURBIDITY = 4;</code>
     */
    public static final int TURBIDITY_VALUE = 4;
    /**
     * <code>TEMPERATURE = 5;</code>
     */
    public static final int TEMPERATURE_VALUE = 5;
    /**
     * <code>FLUROIDE = 6;</code>
     */
    public static final int FLUROIDE_VALUE = 6;
    /**
     * <code>CALCIUM = 7;</code>
     */
    public static final int CALCIUM_VALUE = 7;
    /**
     * <code>NITRATE = 8;</code>
     */
    public static final int NITRATE_VALUE = 8;
    /**
     * <code>CHLORINE = 9;</code>
     */
    public static final int CHLORINE_VALUE = 9;
    /**
     * <code>BROMIDE = 10;</code>
     */
    public static final int BROMIDE_VALUE = 10;
    /**
     * <code>SILVER = 11;</code>
     */
    public static final int SILVER_VALUE = 11;
    /**
     * <code>FLUOROBORATE = 12;</code>
     */
    public static final int FLUOROBORATE_VALUE = 12;
    /**
     * <code>AMMONIA = 13;</code>
     */
    public static final int AMMONIA_VALUE = 13;
    /**
     * <code>LITHIUM = 14;</code>
     */
    public static final int LITHIUM_VALUE = 14;
    /**
     * <code>MEGNESIUM = 15;</code>
     */
    public static final int MEGNESIUM_VALUE = 15;
    /**
     * <code>PERCHLORATE = 16;</code>
     */
    public static final int PERCHLORATE_VALUE = 16;
    /**
     * <code>POTASSIUM = 17;</code>
     */
    public static final int POTASSIUM_VALUE = 17;
    /**
     * <code>SODIUM = 18;</code>
     */
    public static final int SODIUM_VALUE = 18;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Attribute valueOf(int value) {
      return forNumber(value);
    }

    public static Attribute forNumber(int value) {
      switch (value) {
        case 0: return PH;
        case 1: return DO;
        case 2: return ORP;
        case 3: return CONDUCTIVITY;
        case 4: return TURBIDITY;
        case 5: return TEMPERATURE;
        case 6: return FLUROIDE;
        case 7: return CALCIUM;
        case 8: return NITRATE;
        case 9: return CHLORINE;
        case 10: return BROMIDE;
        case 11: return SILVER;
        case 12: return FLUOROBORATE;
        case 13: return AMMONIA;
        case 14: return LITHIUM;
        case 15: return MEGNESIUM;
        case 16: return PERCHLORATE;
        case 17: return POTASSIUM;
        case 18: return SODIUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Attribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Attribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Attribute>() {
            public Attribute findValueByNumber(int number) {
              return Attribute.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.waterquality.WaterParameter.getDescriptor().getEnumTypes().get(1);
    }

    private static final Attribute[] VALUES = values();

    public static Attribute valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Attribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:WaterParameter.Attribute)
  }

  /**
   * Protobuf enum {@code WaterParameter.State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>G = 0;</code>
     */
    G(0),
    /**
     * <code>Y = 1;</code>
     */
    Y(1),
    /**
     * <code>R = 2;</code>
     */
    R(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>G = 0;</code>
     */
    public static final int G_VALUE = 0;
    /**
     * <code>Y = 1;</code>
     */
    public static final int Y_VALUE = 1;
    /**
     * <code>R = 2;</code>
     */
    public static final int R_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    public static State forNumber(int value) {
      switch (value) {
        case 0: return G;
        case 1: return Y;
        case 2: return R;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.waterquality.WaterParameter.getDescriptor().getEnumTypes().get(2);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:WaterParameter.State)
  }

  public static final int UNIT_FIELD_NUMBER = 1;
  private int unit_;
  /**
   * <code>.WaterParameter.Unit unit = 1;</code>
   */
  public int getUnitValue() {
    return unit_;
  }
  /**
   * <code>.WaterParameter.Unit unit = 1;</code>
   */
  public com.mobile.sensor.cloud.waterquality.WaterParameter.Unit getUnit() {
    com.mobile.sensor.cloud.waterquality.WaterParameter.Unit result = com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.valueOf(unit_);
    return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.UNRECOGNIZED : result;
  }

  public static final int ATTRIBUTE_FIELD_NUMBER = 2;
  private int attribute_;
  /**
   * <code>.WaterParameter.Attribute attribute = 2;</code>
   */
  public int getAttributeValue() {
    return attribute_;
  }
  /**
   * <code>.WaterParameter.Attribute attribute = 2;</code>
   */
  public com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute getAttribute() {
    com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute result = com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.valueOf(attribute_);
    return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.UNRECOGNIZED : result;
  }

  public static final int STATE_FIELD_NUMBER = 3;
  private int state_;
  /**
   * <code>.WaterParameter.State state = 3;</code>
   */
  public int getStateValue() {
    return state_;
  }
  /**
   * <code>.WaterParameter.State state = 3;</code>
   */
  public com.mobile.sensor.cloud.waterquality.WaterParameter.State getState() {
    com.mobile.sensor.cloud.waterquality.WaterParameter.State result = com.mobile.sensor.cloud.waterquality.WaterParameter.State.valueOf(state_);
    return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.State.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (unit_ != com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.PARTS_PER_MILLION.getNumber()) {
      output.writeEnum(1, unit_);
    }
    if (attribute_ != com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.PH.getNumber()) {
      output.writeEnum(2, attribute_);
    }
    if (state_ != com.mobile.sensor.cloud.waterquality.WaterParameter.State.G.getNumber()) {
      output.writeEnum(3, state_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (unit_ != com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.PARTS_PER_MILLION.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, unit_);
    }
    if (attribute_ != com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.PH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, attribute_);
    }
    if (state_ != com.mobile.sensor.cloud.waterquality.WaterParameter.State.G.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, state_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.mobile.sensor.cloud.waterquality.WaterParameter)) {
      return super.equals(obj);
    }
    com.mobile.sensor.cloud.waterquality.WaterParameter other = (com.mobile.sensor.cloud.waterquality.WaterParameter) obj;

    boolean result = true;
    result = result && unit_ == other.unit_;
    result = result && attribute_ == other.attribute_;
    result = result && state_ == other.state_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + UNIT_FIELD_NUMBER;
    hash = (53 * hash) + unit_;
    hash = (37 * hash) + ATTRIBUTE_FIELD_NUMBER;
    hash = (53 * hash) + attribute_;
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.waterquality.WaterParameter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.mobile.sensor.cloud.waterquality.WaterParameter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * water quality attributes
   * </pre>
   *
   * Protobuf type {@code WaterParameter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:WaterParameter)
      com.mobile.sensor.cloud.waterquality.WaterParameterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.waterquality.WaterQualitySensorProto.internal_static_WaterParameter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobile.sensor.cloud.waterquality.WaterQualitySensorProto.internal_static_WaterParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobile.sensor.cloud.waterquality.WaterParameter.class, com.mobile.sensor.cloud.waterquality.WaterParameter.Builder.class);
    }

    // Construct using com.mobile.sensor.cloud.waterquality.WaterParameter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      unit_ = 0;

      attribute_ = 0;

      state_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.mobile.sensor.cloud.waterquality.WaterQualitySensorProto.internal_static_WaterParameter_descriptor;
    }

    public com.mobile.sensor.cloud.waterquality.WaterParameter getDefaultInstanceForType() {
      return com.mobile.sensor.cloud.waterquality.WaterParameter.getDefaultInstance();
    }

    public com.mobile.sensor.cloud.waterquality.WaterParameter build() {
      com.mobile.sensor.cloud.waterquality.WaterParameter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.mobile.sensor.cloud.waterquality.WaterParameter buildPartial() {
      com.mobile.sensor.cloud.waterquality.WaterParameter result = new com.mobile.sensor.cloud.waterquality.WaterParameter(this);
      result.unit_ = unit_;
      result.attribute_ = attribute_;
      result.state_ = state_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.mobile.sensor.cloud.waterquality.WaterParameter) {
        return mergeFrom((com.mobile.sensor.cloud.waterquality.WaterParameter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.mobile.sensor.cloud.waterquality.WaterParameter other) {
      if (other == com.mobile.sensor.cloud.waterquality.WaterParameter.getDefaultInstance()) return this;
      if (other.unit_ != 0) {
        setUnitValue(other.getUnitValue());
      }
      if (other.attribute_ != 0) {
        setAttributeValue(other.getAttributeValue());
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.mobile.sensor.cloud.waterquality.WaterParameter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.mobile.sensor.cloud.waterquality.WaterParameter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int unit_ = 0;
    /**
     * <code>.WaterParameter.Unit unit = 1;</code>
     */
    public int getUnitValue() {
      return unit_;
    }
    /**
     * <code>.WaterParameter.Unit unit = 1;</code>
     */
    public Builder setUnitValue(int value) {
      unit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.Unit unit = 1;</code>
     */
    public com.mobile.sensor.cloud.waterquality.WaterParameter.Unit getUnit() {
      com.mobile.sensor.cloud.waterquality.WaterParameter.Unit result = com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.valueOf(unit_);
      return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.Unit.UNRECOGNIZED : result;
    }
    /**
     * <code>.WaterParameter.Unit unit = 1;</code>
     */
    public Builder setUnit(com.mobile.sensor.cloud.waterquality.WaterParameter.Unit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      unit_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.Unit unit = 1;</code>
     */
    public Builder clearUnit() {
      
      unit_ = 0;
      onChanged();
      return this;
    }

    private int attribute_ = 0;
    /**
     * <code>.WaterParameter.Attribute attribute = 2;</code>
     */
    public int getAttributeValue() {
      return attribute_;
    }
    /**
     * <code>.WaterParameter.Attribute attribute = 2;</code>
     */
    public Builder setAttributeValue(int value) {
      attribute_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.Attribute attribute = 2;</code>
     */
    public com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute getAttribute() {
      com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute result = com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.valueOf(attribute_);
      return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute.UNRECOGNIZED : result;
    }
    /**
     * <code>.WaterParameter.Attribute attribute = 2;</code>
     */
    public Builder setAttribute(com.mobile.sensor.cloud.waterquality.WaterParameter.Attribute value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      attribute_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.Attribute attribute = 2;</code>
     */
    public Builder clearAttribute() {
      
      attribute_ = 0;
      onChanged();
      return this;
    }

    private int state_ = 0;
    /**
     * <code>.WaterParameter.State state = 3;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <code>.WaterParameter.State state = 3;</code>
     */
    public Builder setStateValue(int value) {
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.State state = 3;</code>
     */
    public com.mobile.sensor.cloud.waterquality.WaterParameter.State getState() {
      com.mobile.sensor.cloud.waterquality.WaterParameter.State result = com.mobile.sensor.cloud.waterquality.WaterParameter.State.valueOf(state_);
      return result == null ? com.mobile.sensor.cloud.waterquality.WaterParameter.State.UNRECOGNIZED : result;
    }
    /**
     * <code>.WaterParameter.State state = 3;</code>
     */
    public Builder setState(com.mobile.sensor.cloud.waterquality.WaterParameter.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.WaterParameter.State state = 3;</code>
     */
    public Builder clearState() {
      
      state_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:WaterParameter)
  }

  // @@protoc_insertion_point(class_scope:WaterParameter)
  private static final com.mobile.sensor.cloud.waterquality.WaterParameter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.mobile.sensor.cloud.waterquality.WaterParameter();
  }

  public static com.mobile.sensor.cloud.waterquality.WaterParameter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WaterParameter>
      PARSER = new com.google.protobuf.AbstractParser<WaterParameter>() {
    public WaterParameter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WaterParameter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WaterParameter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WaterParameter> getParserForType() {
    return PARSER;
  }

  public com.mobile.sensor.cloud.waterquality.WaterParameter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

