// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: airqualitysensor.proto

package com.mobile.sensor.cloud.airquality;

/**
 * <pre>
 * model representing sensor request
 * </pre>
 *
 * Protobuf type {@code AirSensorRequest}
 */
public  final class AirSensorRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:AirSensorRequest)
    AirSensorRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AirSensorRequest.newBuilder() to construct.
  private AirSensorRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AirSensorRequest() {
    authToken_ = "";
    timeSpan_ = 0;
    timeUnit_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AirSensorRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            authToken_ = s;
            break;
          }
          case 16: {

            timeSpan_ = input.readInt32();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            timeUnit_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.mobile.sensor.cloud.airquality.AirQualitySensorProto.internal_static_AirSensorRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.mobile.sensor.cloud.airquality.AirQualitySensorProto.internal_static_AirSensorRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.mobile.sensor.cloud.airquality.AirSensorRequest.class, com.mobile.sensor.cloud.airquality.AirSensorRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code AirSensorRequest.TimeUnit}
   */
  public enum TimeUnit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LATEST = 0;</code>
     */
    LATEST(0),
    /**
     * <code>SECOND = 1;</code>
     */
    SECOND(1),
    /**
     * <code>MINUTE = 2;</code>
     */
    MINUTE(2),
    /**
     * <code>HOUR = 3;</code>
     */
    HOUR(3),
    /**
     * <code>DAY = 4;</code>
     */
    DAY(4),
    /**
     * <code>WEEK = 5;</code>
     */
    WEEK(5),
    /**
     * <code>MONTH = 6;</code>
     */
    MONTH(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LATEST = 0;</code>
     */
    public static final int LATEST_VALUE = 0;
    /**
     * <code>SECOND = 1;</code>
     */
    public static final int SECOND_VALUE = 1;
    /**
     * <code>MINUTE = 2;</code>
     */
    public static final int MINUTE_VALUE = 2;
    /**
     * <code>HOUR = 3;</code>
     */
    public static final int HOUR_VALUE = 3;
    /**
     * <code>DAY = 4;</code>
     */
    public static final int DAY_VALUE = 4;
    /**
     * <code>WEEK = 5;</code>
     */
    public static final int WEEK_VALUE = 5;
    /**
     * <code>MONTH = 6;</code>
     */
    public static final int MONTH_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimeUnit valueOf(int value) {
      return forNumber(value);
    }

    public static TimeUnit forNumber(int value) {
      switch (value) {
        case 0: return LATEST;
        case 1: return SECOND;
        case 2: return MINUTE;
        case 3: return HOUR;
        case 4: return DAY;
        case 5: return WEEK;
        case 6: return MONTH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimeUnit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TimeUnit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimeUnit>() {
            public TimeUnit findValueByNumber(int number) {
              return TimeUnit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.airquality.AirSensorRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final TimeUnit[] VALUES = values();

    public static TimeUnit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimeUnit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AirSensorRequest.TimeUnit)
  }

  public static final int AUTHTOKEN_FIELD_NUMBER = 1;
  private volatile java.lang.Object authToken_;
  /**
   * <code>string authToken = 1;</code>
   */
  public java.lang.String getAuthToken() {
    java.lang.Object ref = authToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authToken_ = s;
      return s;
    }
  }
  /**
   * <code>string authToken = 1;</code>
   */
  public com.google.protobuf.ByteString
      getAuthTokenBytes() {
    java.lang.Object ref = authToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMESPAN_FIELD_NUMBER = 2;
  private int timeSpan_;
  /**
   * <pre>
   * indicating last 10 sec, 5 mins, 1 hrs etc in combination with timeUnit
   * </pre>
   *
   * <code>int32 timeSpan = 2;</code>
   */
  public int getTimeSpan() {
    return timeSpan_;
  }

  public static final int TIMEUNIT_FIELD_NUMBER = 3;
  private int timeUnit_;
  /**
   * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
   */
  public int getTimeUnitValue() {
    return timeUnit_;
  }
  /**
   * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
   */
  public com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit getTimeUnit() {
    com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit result = com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.valueOf(timeUnit_);
    return result == null ? com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getAuthTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authToken_);
    }
    if (timeSpan_ != 0) {
      output.writeInt32(2, timeSpan_);
    }
    if (timeUnit_ != com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.LATEST.getNumber()) {
      output.writeEnum(3, timeUnit_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getAuthTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authToken_);
    }
    if (timeSpan_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, timeSpan_);
    }
    if (timeUnit_ != com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.LATEST.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, timeUnit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.mobile.sensor.cloud.airquality.AirSensorRequest)) {
      return super.equals(obj);
    }
    com.mobile.sensor.cloud.airquality.AirSensorRequest other = (com.mobile.sensor.cloud.airquality.AirSensorRequest) obj;

    boolean result = true;
    result = result && getAuthToken()
        .equals(other.getAuthToken());
    result = result && (getTimeSpan()
        == other.getTimeSpan());
    result = result && timeUnit_ == other.timeUnit_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AUTHTOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getAuthToken().hashCode();
    hash = (37 * hash) + TIMESPAN_FIELD_NUMBER;
    hash = (53 * hash) + getTimeSpan();
    hash = (37 * hash) + TIMEUNIT_FIELD_NUMBER;
    hash = (53 * hash) + timeUnit_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.mobile.sensor.cloud.airquality.AirSensorRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.mobile.sensor.cloud.airquality.AirSensorRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * model representing sensor request
   * </pre>
   *
   * Protobuf type {@code AirSensorRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:AirSensorRequest)
      com.mobile.sensor.cloud.airquality.AirSensorRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mobile.sensor.cloud.airquality.AirQualitySensorProto.internal_static_AirSensorRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mobile.sensor.cloud.airquality.AirQualitySensorProto.internal_static_AirSensorRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mobile.sensor.cloud.airquality.AirSensorRequest.class, com.mobile.sensor.cloud.airquality.AirSensorRequest.Builder.class);
    }

    // Construct using com.mobile.sensor.cloud.airquality.AirSensorRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      authToken_ = "";

      timeSpan_ = 0;

      timeUnit_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.mobile.sensor.cloud.airquality.AirQualitySensorProto.internal_static_AirSensorRequest_descriptor;
    }

    public com.mobile.sensor.cloud.airquality.AirSensorRequest getDefaultInstanceForType() {
      return com.mobile.sensor.cloud.airquality.AirSensorRequest.getDefaultInstance();
    }

    public com.mobile.sensor.cloud.airquality.AirSensorRequest build() {
      com.mobile.sensor.cloud.airquality.AirSensorRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.mobile.sensor.cloud.airquality.AirSensorRequest buildPartial() {
      com.mobile.sensor.cloud.airquality.AirSensorRequest result = new com.mobile.sensor.cloud.airquality.AirSensorRequest(this);
      result.authToken_ = authToken_;
      result.timeSpan_ = timeSpan_;
      result.timeUnit_ = timeUnit_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.mobile.sensor.cloud.airquality.AirSensorRequest) {
        return mergeFrom((com.mobile.sensor.cloud.airquality.AirSensorRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.mobile.sensor.cloud.airquality.AirSensorRequest other) {
      if (other == com.mobile.sensor.cloud.airquality.AirSensorRequest.getDefaultInstance()) return this;
      if (!other.getAuthToken().isEmpty()) {
        authToken_ = other.authToken_;
        onChanged();
      }
      if (other.getTimeSpan() != 0) {
        setTimeSpan(other.getTimeSpan());
      }
      if (other.timeUnit_ != 0) {
        setTimeUnitValue(other.getTimeUnitValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.mobile.sensor.cloud.airquality.AirSensorRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.mobile.sensor.cloud.airquality.AirSensorRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object authToken_ = "";
    /**
     * <code>string authToken = 1;</code>
     */
    public java.lang.String getAuthToken() {
      java.lang.Object ref = authToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string authToken = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAuthTokenBytes() {
      java.lang.Object ref = authToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string authToken = 1;</code>
     */
    public Builder setAuthToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string authToken = 1;</code>
     */
    public Builder clearAuthToken() {
      
      authToken_ = getDefaultInstance().getAuthToken();
      onChanged();
      return this;
    }
    /**
     * <code>string authToken = 1;</code>
     */
    public Builder setAuthTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authToken_ = value;
      onChanged();
      return this;
    }

    private int timeSpan_ ;
    /**
     * <pre>
     * indicating last 10 sec, 5 mins, 1 hrs etc in combination with timeUnit
     * </pre>
     *
     * <code>int32 timeSpan = 2;</code>
     */
    public int getTimeSpan() {
      return timeSpan_;
    }
    /**
     * <pre>
     * indicating last 10 sec, 5 mins, 1 hrs etc in combination with timeUnit
     * </pre>
     *
     * <code>int32 timeSpan = 2;</code>
     */
    public Builder setTimeSpan(int value) {
      
      timeSpan_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating last 10 sec, 5 mins, 1 hrs etc in combination with timeUnit
     * </pre>
     *
     * <code>int32 timeSpan = 2;</code>
     */
    public Builder clearTimeSpan() {
      
      timeSpan_ = 0;
      onChanged();
      return this;
    }

    private int timeUnit_ = 0;
    /**
     * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
     */
    public int getTimeUnitValue() {
      return timeUnit_;
    }
    /**
     * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
     */
    public Builder setTimeUnitValue(int value) {
      timeUnit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
     */
    public com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit getTimeUnit() {
      com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit result = com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.valueOf(timeUnit_);
      return result == null ? com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit.UNRECOGNIZED : result;
    }
    /**
     * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
     */
    public Builder setTimeUnit(com.mobile.sensor.cloud.airquality.AirSensorRequest.TimeUnit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      timeUnit_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.AirSensorRequest.TimeUnit timeUnit = 3;</code>
     */
    public Builder clearTimeUnit() {
      
      timeUnit_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:AirSensorRequest)
  }

  // @@protoc_insertion_point(class_scope:AirSensorRequest)
  private static final com.mobile.sensor.cloud.airquality.AirSensorRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.mobile.sensor.cloud.airquality.AirSensorRequest();
  }

  public static com.mobile.sensor.cloud.airquality.AirSensorRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AirSensorRequest>
      PARSER = new com.google.protobuf.AbstractParser<AirSensorRequest>() {
    public AirSensorRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AirSensorRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AirSensorRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AirSensorRequest> getParserForType() {
    return PARSER;
  }

  public com.mobile.sensor.cloud.airquality.AirSensorRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

